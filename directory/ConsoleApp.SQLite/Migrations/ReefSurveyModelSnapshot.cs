// <auto-generated />
using ConsoleApp.SQLServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConsoleApp.SQLite.Migrations
{
    [DbContext(typeof(ReefSurvey))]
    partial class ReefSurveyModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConsoleApp.SQLServer.FishInfo", b =>
                {
                    b.Property<int>("FishInfoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("FishLength");

                    b.Property<int>("MetricID");

                    b.Property<string>("StructureType");

                    b.HasKey("FishInfoID");

                    b.ToTable("FishInfos");
                });

            modelBuilder.Entity("ConsoleApp.SQLServer.FishName", b =>
                {
                    b.Property<int>("FishNameID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommonName");

                    b.Property<string>("ScientificName");

                    b.HasKey("FishNameID");

                    b.ToTable("FishNames");
                });

            modelBuilder.Entity("ConsoleApp.SQLServer.FishObserved", b =>
                {
                    b.Property<int>("FishObservedID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Family");

                    b.Property<int>("LocationID");

                    b.Property<int>("MetricID");

                    b.Property<string>("Trophic");

                    b.HasKey("FishObservedID");

                    b.ToTable("FishObserveds");
                });

            modelBuilder.Entity("ConsoleApp.SQLServer.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Latitude");

                    b.Property<float>("Longitude");

                    b.Property<int>("RegionID");

                    b.HasKey("LocationID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("ConsoleApp.SQLServer.Region", b =>
                {
                    b.Property<int>("RegionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RegionName");

                    b.Property<string>("SubRegionName");

                    b.HasKey("RegionID");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("ConsoleApp.SQLServer.Survey", b =>
                {
                    b.Property<int>("SurveyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchCode");

                    b.Property<int>("FishCount");

                    b.Property<string>("Management");

                    b.Property<int>("ObservationID");

                    b.Property<string>("StudyArea");

                    b.Property<string>("SurveyDate");

                    b.Property<int>("SurveyIndex");

                    b.Property<string>("SurveyYear");

                    b.HasKey("SurveyID");

                    b.ToTable("Surveys");
                });
#pragma warning restore 612, 618
        }
    }
}
